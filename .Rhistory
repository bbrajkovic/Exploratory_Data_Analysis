submit()
submit()
submit()
mylist<-data("Indometh")
mylist
Indometh
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package = lubridate)
today()
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day,label=TRUE)
NOW()
now()
this_moment<-now()
this_day
this_moment
hour(this_day)
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours =8, minutes =34, seconds =55)
this_moment
this_moment<-update(this_moment, hours =20, minutes =49, seconds =55)
this_moment
nyc<-now(America/New_York)
?now
nyc<-now(tzone="America/New_York")
nyc
myc+days(2)
nyc+days2
nyc+days(2)
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minutes=34)
depart
nyc+hours(15)+minutes(50)
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-update(with_tz(arrive,tzone="Asia/Hong_Kong"))
arrive<-with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?interval
how_long<-interval(last_time,arrive)
how_long
as.period(how_long)
stopwatch()
data<-download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
data<-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
data<-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",data.csv)
data<-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","data.csv")
data<-read.csv(data.csv)
data<-read.csv("data.csv")
head(data)
strsplit(data,"wgtp")
?strsplit
class(data)
answer1 <- strsplit(names(data), "wgtp")
answer1[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","data.csv")
library(dplyr)
data<-read.csv(data.csv)
data<-read.csv("data.csv")
var<-as_tibble(data)
var
?gsub
gsub(",","",data$X.3)
answer<-gsub(",","",data$X.3)
mean(as.numeric(answer),na.rm = TRUE)
answer
data1<-if(is.numeric(as.numeric(answer))==TRUE)answer
data1<-if(is.numeric(answer)==TRUE)answer
data1<-as.numeric(answer)
data1<-if(is.numeric(answer)==TRUE)answer
data1<-as.numeric(answer)
data2<-if(is.numeric(data1)==TRUE)data1
?as.numeric
mean(data1,na.rm = TRUE)
fname <- "gdp.csv"
download_if_not_exists(fname, "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
# First 4 rows are rubbish, skip them
#
# Secondly, according to this source: http://data.worldbank.org/data-catalog/GDP-ranking-table
# there are 214 economies, i.e select first 215 rows, as the 1st row is a header
#
# Finally, select the relevant columns and rename them, so that they match column names in the "edu" data set
gdp <- read.csv(fname, skip = 4, nrows = 215) %>%
subset(!is.na(X) & X != "", select = c("X", "X.1", "X.3", "X.4")) %>%
rename(CountryCode = X, rankingGDP = X.1, Long.Name = X.3, gdp = X.4)
answer2 <- gsub(",", "", gdp$gdp) %>%
as.numeric %>%
mean(na.rm = TRUE)
# Expected output: "The average GDP is 377652.421052632"
msg("The average GDP is", answer2)
data
var
countryNames<-data$X.2
grep("*United",countryNames)
grep("*United",countryNames), 5
uantmod (http://www.quantmod.com/)
quantmod (http://www.quantmod.com/)
install.packages("quantmod")
library(quantmod)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
download.file("http://airo.maynoothuniversity.ie/files/dDATASTORE/crime/garda%20stations/garda_stations.csv","garda.csv")
garda<-read.csv("garda.csv")
garda
data<-as_tibble(garda)
data
data
library(swirl)
swirl()
quit()
results <- replicate(10000, sample(1:6, 1))
table(results)
?table
temp<table(results)
temp<-table(results)
temp
dim(temp)
sum(temp)
temp/sum(temp)
temp/sum(temp)*100
sum(temp/sum(temp)*100)
results <- replicate(100000, sample(1:6, 1))
table(results)
temp<-table(results)
temp/sum(temp)*100
results <- replicate(67934, sample(1:6, 1))
table(results)
temp<-table(results)
temp/sum(temp)*100
sum(temp/sum(temp)*100)
q<-(temp/sum(temp)*100)
str(q)
table(q)
head(q)
summary(q)
library(dplyr)
summarise(q)
summarize(q)
max(q)
max(q)-min(q)
summarise(results)
q<-as_tibble(results)
q
history(q)
hist(q)
hist(results)
plot(results)
results <- replicate(67, sample(1:6, 1))
table(results)
plot(results)
library("jpeg", lib.loc="~/Library/R/3.5/library")
?jpeg
setwd("~/Desktop/Coursera/wd")
jpeg("0.jpg",width=450,height=450,units="px")
?jpeg
?readJPEG
readJPEG("0.JPG")
readJPEG("0.jpg")
readJPEG("0.jpeg")
maja<-readJPEG("0.jpeg")
plot(maja)
head(maja)
450*450
table(maja)
max(table(maja))
table(maja)&10142
if (exists("rasterImage")) { # can plot only in R 2.11.0 and higher
plot(1:2, type='n')
rasterImage(img, 1.2, 1.27, 1.8, 1.73)
rasterImage(img.n, 1.5, 1.5, 1.9, 1.8)
}
if (exists("rasterImage")) { # can plot only in R 2.11.0 and higher
plot(1:2, type='n')
rasterImage(maja, 1.2, 1.27, 1.8, 1.73)
rasterImage(maja.n, 1.5, 1.5, 1.9, 1.8)
}
rasterImage(maja, 1.2, 1.27, 1.8, 1.73)
mg <- readJPEG(system.file("img", "Rlogo.jpg", package="jpeg"))
rasterImage(mg, 1.2, 1.27, 1.8, 1.73)
rasterImage(mg, 1.2, 1.27, 1.8, 1.73)
maja <- readJPEG("0.jpeg")
system.file("img", "Rlogo.jpg", package="jpeg")
writeJPEG(maja)
?writeJPEG
writeJPEG(maja,"maja.jpeg")
bw<-if(maja>0.5)
{
1
else(0)
}
bw<-if(maja>0.5)
{
1
else()0
}
bw<-if(maja>0.5)1
else()0
for(i in length(maja))
{
if (maja[i]>0.5)1
else 0
}
bw
length(maja)
for(i in 1:length(maja))
{
if (maja[i]>0.5)1
else 0
}
for(i in 1:length(maja))
{
if (maja[i]>0.5)1
else 0
}
for(i in 1:607500)
{
if (maja[i]>0.5)1
else 0
}
for(i in 1:607500)
{
if (maja[i]>0.5)1
else 0
print(i)
}
for(i in 1:607500)
{
if (maja[i]>0.5)bw[i]=1
else bw[i]=0
}
writeJPEG(maja,"maja.jpeg")
writeJPEG(bw,"maja.jpeg")
dim(maja)
ar<-array(maja,dim=c(450,450,3))
dim(ar)
writeJPEG(ar,"maja.jpeg")
ar<-array(bw,dim=c(450,450,3))
dim(ar)
writeJPEG(ar,"maja.jpeg")
table(ar)
450*450*3
?group_by()
for(i in length(maja))
{
if (maja[i]>0.5)bw[i]=1
else bw[i]=0
}
for(i in length(maja))
{
temp=maja[i]
for(j in 1:3)
{
sum[i] = maja[i]+maja[i+j]
}
as_tibble(sum)
}
for(i in length(maja))
{
temp=maja[i]
for(j in 1:3)
{
temp[i] = maja[i]+maja[i+j]
}
as_tibble(temp)
}
table(temp)
head(temp)
temp
?for
()
?for()
for(i in length(maja),by=3)
{
if (maja[i]>0.5)dw[i]=1
else dw[i]=0
}
dw
dw<-0
for(i in length(maja),by=3)
{
if (maja[i]>0.5)dw[i]=1
else dw[i]=0
}
head(dw)
for(i in length(maja),by=3)
{
if (maja[i]>0.5)dw[i]=1
else dw[i]=0
maja[i]
}
for(i in 1:length(maja),by=3)
{
if (maja[i]>0.5)dw[i]=1
else dw[i]=0
maja[i]
}
for(i in 1:length(maja) by=3)
{
if (maja[i]>0.5)dw[i]=1
else dw[i]=0
maja[i]
}
for(i in seq(from=1, to=length(maja), by=2))
{
if (maja[i]>0.5)dw[i]=1
else dw[i]=0
maja[i]
}
dw<-seq(from=1, to=length(maja), by=3)
for(a in seq(2,8,2)) {
cat(a, ", ")
}
cat("who do we appreciate?\n")
for(a in seq(2,8,2)) {
cat(a, ", ")
}
for(i in seq(1, length(maja), 2))
{
if (maja[i]>0.5)dw[i]=1
else dw[i]=0
maja[i]
}
for(i in seq(1, 607500, 3))
{
if (maja[i]>0.5)dw[i]=1
else dw[i]=0
maja[i]
}
for(i in seq(from=1, to=length(maja), by=3))
{
if (maja[i]>0.5)dw[i]=1
else dw[i]=0
}
for(i in seq(1, 607500, 3))
{
if (maja[i]>0.5)dw[i]=1
else dw[i]=0
}
for(i in seq(1, 607500, 3))
{
dw[i]=0
}
dw<-0
for(i in seq(1, 607500, 3))
{
dw[i]=0
}
dw<-0
for(i in seq(0, 607500, 3))
{
dw[i]=0
}
?seq
dw<-seq(0,607500,3)
dw<-seq(1,607500,3)
head(dw)
for(i in dw)
{
a[i]=0
}
for(i in dw)
{
a[dw[i]]=0
}
a<-0
for(i in dw)
{
a[dw[i]]=0
}
for(i in dw)
{
for(j in 0:202500)
{
a[j]<-maja[i]
}
}
a<-0
for(i in dw)
{
for(j in 0:202500)
{
a[j]<-maja[i]
}
}
head(a)
for(i in a)
{
if (a[i]>0.5)dw[i]=1
else dw[i]=0
}
for(i in 1:202500)
{
if (a[i]>0.5)dw[i]=1
else dw[i]=0
}
ar<-array(dw,dim=c(450,450,1))
writeJPEG(ar,"maja.jpeg")
head(ar)
100*100
ar<-sample(0:1,10000)
?sample
ar<-sample(0:1,10000,replace = TRUE)
writeJPEG(ar,"maja.jpeg")
?as.matrix
?dim
i<-as.matrix(a,100,100)
i<-as.matrix(ar,100,100)
writeJPEG(i,"maja.jpeg")
table(i)
i<-as.array(ar,100,100,1)
writeJPEG(i,"maja.jpeg")
getwd
getwd()
data<-read.table(household_power_consumption)
data<-read.table("household_power_consumption.txt")
View(data)
size(data)
sizeof(data)
file.size(data)
t <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data<-as_tibble(t)
data
## Format date to Type Date
t$Date <- as.Date(t$Date, "%d/%m/%Y")
## Filter data set from Feb. 1, 2007 to Feb. 2, 2007
t <- subset(t,Date >= as.Date("2007-2-1") & Date <= as.Date("2007-2-2"))
## Remove incomplete observation
t <- t[complete.cases(t),]
## Combine Date and Time column
dateTime <- paste(t$Date, t$Time)
## Name the vector
dateTime <- setNames(dateTime, "DateTime")
## Remove Date and Time column
t <- t[ ,!(names(t) %in% c("Date","Time"))]
## Add DateTime column
t <- cbind(dateTime, t)
## Format dateTime Column
t$dateTime <- as.POSIXct(dateTime)
setwd("~/Desktop/Coursera/4. Exploratory Data Analysis")
## Format date to Type Date
t$Date <- as.Date(t$Date, "%d/%m/%Y")
## Filter data set from Feb. 1, 2007 to Feb. 2, 2007
t <- subset(t,Date >= as.Date("2007-2-1") & Date <= as.Date("2007-2-2"))
## Remove incomplete observation
t <- t[complete.cases(t),]
## Combine Date and Time column
dateTime <- paste(t$Date, t$Time)
## Name the vector
dateTime <- setNames(dateTime, "DateTime")
## Remove Date and Time column
t <- t[ ,!(names(t) %in% c("Date","Time"))]
## Add DateTime column
t <- cbind(dateTime, t)
## Format dateTime Column
t$dateTime <- as.POSIXct(dateTime)
t <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
## Format date to Type Date
t$Date <- as.Date(t$Date, "%d/%m/%Y")
## Filter data set from Feb. 1, 2007 to Feb. 2, 2007
t <- subset(t,Date >= as.Date("2007-2-1") & Date <= as.Date("2007-2-2"))
## Remove incomplete observation
t <- t[complete.cases(t),]
## Combine Date and Time column
dateTime <- paste(t$Date, t$Time)
## Name the vector
dateTime <- setNames(dateTime, "DateTime")
## Remove Date and Time column
t <- t[ ,!(names(t) %in% c("Date","Time"))]
## Add DateTime column
t <- cbind(dateTime, t)
## Format dateTime Column
t$dateTime <- as.POSIXct(dateTime)
head(t)
?complete.cases
## LOADING DATA FROM "household_power_consumption.txt" FILE  AND FORMATTING DATASET AS PER PROJECT REQUIREMENTS ##
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data$Date <- as.Date(data$Date, "%d/%m/%Y")                                     # Converting data$Date from 'character' to 'date'
data <- subset(data,Date >= as.Date("2007-2-1") & Date <= as.Date("2007-2-2"))  # Subsetting data that will be used for plotting
data <- data[complete.cases(data),]                                             # Cleaning dataset for incomplete observations
dateTime <- paste(data$Date, data$Time)                                         # Merging date and time into one variable
dateTime <- setNames(dateTime, "DateTime")
data <- data[ ,!(names(data) %in% c("Date","Time"))]
data <- cbind(dateTime, data)
data$dateTime <- as.POSIXct(dateTime)
hist(t$Global_active_power, main="Global Active Power", xlab = "Global Active Power (kilowatts)", col="red")
hist(data$Global_active_power, main="Global Active Power", xlab = "Global Active Power (kilowatts)", col="red")
hist(data$Global_active_power, main="Global Active Power", xlab = "Global Active Power (kilowatts)", col="red")
