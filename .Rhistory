cnames <- ("patient","age","weight","bp"<"rating","test")
cnames <- c("patient","age","weight","bp"<"rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
swirl()
library(swirl)
swirl
swirl()
library(dplyr)
cran <- as_tibble(mydf)
cran <- tbl_df(mydf)
play()
head(mydf)
cran
head(mydf,10)
tbl_df
as_data_frame
UseMethod
nxt()
rm("mydf")
cran
?group_by
group(cran,package)
group_by(cran,package)
by_package<-group_by(cran,package)
by_package
summarize(by_package)
summarize(by_package,mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum,pack_sum$count>679)
filter(pack_sum,count>679)
top_cpunts <- quantile(pack_sum$count, probs = 0.99)
top_cpunts <- filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
rm("top_cpunts")
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,count)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum,unique>465)
View(top_unique)
arrange(top_unique,desc(unique))
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = res, col = sex_class, into =
| c("sex", "class"))
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
submit()
students3
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
library(readr)
submit()
?parse_number
parse_number("class5")
?mutate
submit()
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
mutate(failed)
passed <- passed %>% mutate(status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
submit()
mylist<-data("Indometh")
mylist
Indometh
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package = lubridate)
today()
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day,label=TRUE)
NOW()
now()
this_moment<-now()
this_day
this_moment
hour(this_day)
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours =8, minutes =34, seconds =55)
this_moment
this_moment<-update(this_moment, hours =20, minutes =49, seconds =55)
this_moment
nyc<-now(America/New_York)
?now
nyc<-now(tzone="America/New_York")
nyc
myc+days(2)
nyc+days2
nyc+days(2)
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minutes=34)
depart
nyc+hours(15)+minutes(50)
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-update(with_tz(arrive,tzone="Asia/Hong_Kong"))
arrive<-with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?interval
how_long<-interval(last_time,arrive)
how_long
as.period(how_long)
stopwatch()
data<-download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
data<-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
data<-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",data.csv)
data<-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","data.csv")
data<-read.csv(data.csv)
data<-read.csv("data.csv")
head(data)
strsplit(data,"wgtp")
?strsplit
class(data)
answer1 <- strsplit(names(data), "wgtp")
answer1[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","data.csv")
library(dplyr)
data<-read.csv(data.csv)
data<-read.csv("data.csv")
var<-as_tibble(data)
var
?gsub
gsub(",","",data$X.3)
answer<-gsub(",","",data$X.3)
mean(as.numeric(answer),na.rm = TRUE)
answer
data1<-if(is.numeric(as.numeric(answer))==TRUE)answer
data1<-if(is.numeric(answer)==TRUE)answer
data1<-as.numeric(answer)
data1<-if(is.numeric(answer)==TRUE)answer
data1<-as.numeric(answer)
data2<-if(is.numeric(data1)==TRUE)data1
?as.numeric
mean(data1,na.rm = TRUE)
fname <- "gdp.csv"
download_if_not_exists(fname, "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
# First 4 rows are rubbish, skip them
#
# Secondly, according to this source: http://data.worldbank.org/data-catalog/GDP-ranking-table
# there are 214 economies, i.e select first 215 rows, as the 1st row is a header
#
# Finally, select the relevant columns and rename them, so that they match column names in the "edu" data set
gdp <- read.csv(fname, skip = 4, nrows = 215) %>%
subset(!is.na(X) & X != "", select = c("X", "X.1", "X.3", "X.4")) %>%
rename(CountryCode = X, rankingGDP = X.1, Long.Name = X.3, gdp = X.4)
answer2 <- gsub(",", "", gdp$gdp) %>%
as.numeric %>%
mean(na.rm = TRUE)
# Expected output: "The average GDP is 377652.421052632"
msg("The average GDP is", answer2)
data
var
countryNames<-data$X.2
grep("*United",countryNames)
grep("*United",countryNames), 5
uantmod (http://www.quantmod.com/)
quantmod (http://www.quantmod.com/)
install.packages("quantmod")
library(quantmod)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
download.file("http://airo.maynoothuniversity.ie/files/dDATASTORE/crime/garda%20stations/garda_stations.csv","garda.csv")
garda<-read.csv("garda.csv")
garda
data<-as_tibble(garda)
data
data
library(swirl)
swirl()
quit()
## LOADING DATA FROM "household_power_consumption.txt" FILE  AND FORMATTING DATASET AS PER PROJECT REQUIREMENTS ##
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data$Date <- as.Date(data$Date, "%d/%m/%Y")                                     # Converting data$Date from 'character' to 'date'
data <- subset(data,Date >= as.Date("2007-2-1") & Date <= as.Date("2007-2-2"))  # Subsetting data that will be used for plotting
data <- data[complete.cases(data),]                                             # Cleaning dataset for incomplete observations
dateTime <- paste(data$Date, data$Time)                                         # Merging date and time into one variable
dateTime <- setNames(dateTime, "DateTime")
data <- data[ ,!(names(data) %in% c("Date","Time"))]
data <- cbind(dateTime, data)
data$dateTime <- as.POSIXct(dateTime)
setwd("~/Desktop/Coursera/4. Exploratory Data Analysis")
## LOADING DATA FROM "household_power_consumption.txt" FILE  AND FORMATTING DATASET AS PER PROJECT REQUIREMENTS ##
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data$Date <- as.Date(data$Date, "%d/%m/%Y")                                     # Converting data$Date from 'character' to 'date'
data <- subset(data,Date >= as.Date("2007-2-1") & Date <= as.Date("2007-2-2"))  # Subsetting data that will be used for plotting
data <- data[complete.cases(data),]                                             # Cleaning dataset for incomplete observations
dateTime <- paste(data$Date, data$Time)                                         # Merging date and time into one variable
dateTime <- setNames(dateTime, "DateTime")
data <- data[ ,!(names(data) %in% c("Date","Time"))]
data <- cbind(dateTime, data)
data$dateTime <- as.POSIXct(dateTime)
plot(data$Global_active_power ~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png,"plot2.png", width=480, height=480)
## Master script ##
source("data_loading_script.R")
source("plot1.R")
source("plot2.R")
source("data_loading_script.R")
hist(data$Global_active_power, main="Global Active Power", xlab = "Global Active Power (kilowatts)", col="red")
dev.copy(png,"plot1.png", width=480, height=480)
dev.off()
source("data_loading_script.R")
hist(data$Global_active_power, main="Global Active Power", xlab = "Global Active Power (kilowatts)", col="red")
dev.copy(png,"plot1.png", width=480, height=480)
dev.off()
head(data)
hist(data$Global_active_power, main="Global Active Power", ylab="Test" xlab = "Global Active Power (kilowatts)", col="red")
hist(data$Global_active_power, main="Global Active Power", ylab="Test", xlab = "Global Active Power (kilowatts)", col="red")
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red")
?hist
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red",ylim=1200)
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red",ylim="1200")
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red",ylim=0:1200)
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red")
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
class(data$Date)
class(data$Time)
paste(data$Date,data$Time)
data.Date<-paste(data$Date,data$Time)
data$Date<-paste(data$Date,data$Time)
data<-data[-2]
head(data)
data$Date<-strptime(data.Date, format = "%d/%m/%Y %H%M%S")
head(data)
head(data.Date)
data$Date<-strptime(data.Date, format = "%d/%m/%Y %H:%M:%S")
head(data)
class(data$Date)
data <- subset(data,Date >= as.POSIXlt("2007-2-1") & Date <= as.POSIXlt("2007-2-2"))
dev.off()
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red")
dev.copy(png,"plot1.png", width=480, height=480)
dev.off()
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red")
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data$Date<-paste(data$Date,data$Time)                                                   # Merging date and time into one variable
data<-data[-2]                                                                          # Removing redundant variables
data <- subset(data,Date >= as.POSIXlt("2007-2-1") & Date <= as.POSIXlt("2007-2-2"))    # Subsetting data that will be used for plotting
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data$Date<-paste(data$Date,data$Time)                                                   # Merging date and time into one variable
data<-data[-2]                                                                          # Removing redundant variables
data <- subset(data,data$Date >= as.POSIXlt("2007-2-1") & data$Date <= as.POSIXlt("2007-2-2"))    # Subsetting data that will be used for plotting
data <- subset(data,Date >= as.POSIXlt("2007-2-1") & Date <= as.POSIXlt("2007-2-2"))
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data$Date<-paste(data$Date,data$Time)                                                   # Merging date and time into one variable
data<-data[-2]                                                                          # Removing redundant variables
data.1 <- subset(data,Date >= as.POSIXlt("2007-2-1") & Date <= as.POSIXlt("2007-2-2"))
data.1 <- subset(data,Date >= as.Date("2007-2-1") & Date <= as.Date("2007-2-2"))  # Subsetting data that will be used for plotting
head(data)
class(data$Date)
## LOADING DATA FROM "household_power_consumption.txt" FILE  AND FORMATTING DATASET AS PER PROJECT REQUIREMENTS ##
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data$Date<-paste(data$Date,data$Time)                                                   # Merging date and time into one variable
data<-data[-2]                                                                          # Removing redundant variables
data$Date<-strptime(data$Date, format = "%d/%m/%Y %H:%M:%S")
data <- subset(data,data$Date >= as.POSIXlt("2007-2-1") & data$Date <= as.POSIXlt("2007-2-2"))    # Subsetting data that will be used for plotting
## FIRST CHART CODE ##
source("data_loading_script_v2.R")
## SECOND CHART CODE ##
source("data_loading_script.R")
plot(data$Global_active_power~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png,"plot2.png", width=480, height=480)
dev.off()
source("plot1.R")
source("plot2.R")
source("plot1.R")
source("plot2.R")
plot(data$Global_active_power~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png,"plot2.png", width=480, height=480)
dev.off()
data <- data[complete.cases(data),]
data <- data[complete.cases(data),]
complete.cases(data)
?complete.cases
table(data)
head(data)
?complete.cases
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data <- data[complete.cases(data),]
## SECOND CHART CODE ##
source("data_loading_script.R")
plot(data$Global_active_power~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png,"plot2.png", width=480, height=480)
dev.off()
## SECOND CHART CODE ##
source("data_loading_script_v2.R")
plot(data$Global_active_power~data$Date, type="l", ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png,"plot2.png", width=480, height=480)
dev.off()
plot(data$Global_active_power~data$Date, type="l", ylab="Global Active Power (kilowatts)", xlab="")
class(data$Date)
plot(data$Global_active_power~as.list(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
class(data$Global_active_power)
plot(data$Global_active_power~as.Date(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Global_active_power~as.Date(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png,"plot2.png", width=480, height=480)
dev.off()
source("data_loading_script_v2.R")
plot(data$Global_active_power~as.Date(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png,"plot2.png", width=480, height=480)
dev.off()
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red")
dev.copy(png,"plot1.png", width=480, height=480)
dev.off()
plot(data$Global_active_power~as.Date(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
plot(data$Global_active_power~as.Date(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Global_active_power~as.Date(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Global_active_power~as.Date(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
table(is.na(data$Global_active_power))
?plot
plot(data$Global_active_power,as.Date(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Global_active_power~as.Date(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Global_active_power~as.POSIXct(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
## LOADING DATA FROM "household_power_consumption.txt" FILE  AND FORMATTING DATASET AS PER PROJECT REQUIREMENTS ##
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
data$Date <- as.Date(data$Date, "%d/%m/%Y")                                     # Converting data$Date from 'character' to 'date'
data <- subset(data,Date >= as.Date("2007-2-1") & Date <= as.Date("2007-2-2"))  # Subsetting data that will be used for plotting
data <- data[complete.cases(data),]                                             # Cleaning dataset for incomplete observations
dateTime <- paste(data$Date, data$Time)                                         # Merging date and time into one variable
dateTime <- setNames(dateTime, "DateTime")
data <- data[ ,!(names(data) %in% c("Date","Time"))]
data <- cbind(dateTime, data)
data$dateTime <- as.POSIXct(dateTime)
plot(data$Global_active_power~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
source("data_loading_script_v2.R")
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red")
dev.copy(png,"plot1.png", width=480, height=480)
dev.off()
plot(data$Global_active_power~as.POSIXct(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
source("data_loading_script.R")
plot(data$Global_active_power~as.POSIXct(data$Date), type="l", ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Global_active_power~data$Date, type="l", ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Global_active_power~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
?plot
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red")
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red")
with(t, {
plot(Sub_metering_1~dateTime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~dateTime,col='Red')
lines(Sub_metering_3~dateTime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lwd=c(1,1,1),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
with(t, {
plot(Sub_metering_1~dateTime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~dateTime,col='Red')
lines(Sub_metering_3~dateTime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lwd=c(1,1,1),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
with(data, {
plot(Sub_metering_1~dateTime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~dateTime,col='Red')
lines(Sub_metering_3~dateTime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lwd=c(1,1,1),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## THIRD CHART CODE ##
plot(data$Sub_metering_1~data$dateTime, type="l",ylab="Global Active Power (kilowatts)", xlab="")
lines(data$Sub_metering_2~data$dateTime,col='Red')
lines(data$Sub_metering_3~data$dateTime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lwd=c(1,1,1), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## THIRD CHART CODE ##
plot(data$Sub_metering_1~data$dateTime, type="l",ylab="Global Active Power (kilowatts)", xlab="")
lines(data$Sub_metering_2~data$dateTime,col='Red')
lines(data$Sub_metering_3~data$dateTime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lwd=c(1,1,1), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## THIRD CHART CODE ##
source("data_loading_script.R")
plot(data$Sub_metering_1~data$dateTime, type="l",ylab="Global Active Power (kilowatts)", xlab="")
lines(data$Sub_metering_2~data$dateTime,col='Red')
lines(data$Sub_metering_3~data$dateTime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lwd=c(1,1,1), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
plot(data$Sub_metering_1~data$dateTime, type="l",ylab="Global Active Power (kilowatts)", xlab="")
lines(data$Sub_metering_2~data$dateTime,col='Red')
lines(data$Sub_metering_3~data$dateTime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lwd=c(1,1,1), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(data$Global_active_power~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Voltage~data$dateTime, type="l", ylab="Voltage (volt)", xlab="")
plot(data$Sub_metering_1~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
lines(data$Sub_metering_2~data$dateTime,col='Red')
lines(data$Sub_metering_3~data$dateTime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n",legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(Global_reactive_power~dateTime, type="l", ylab="Global Rective Power (kilowatts)",xlab="")
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(data$Global_active_power~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Voltage~data$dateTime, type="l", ylab="Voltage (volt)", xlab="")
plot(data$Sub_metering_1~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
lines(data$Sub_metering_2~data$dateTime,col='Red')
lines(data$Sub_metering_3~data$dateTime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n",legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$Global_reactive_power~data$dateTime, type="l", ylab="Global Rective Power (kilowatts)",xlab="")
source("master_script")
source("master_script.R")
source("master_script.R")
## Master script ##
source("data_loading_script.R")
#Script 1
hist(data$Global_active_power, main="Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts)", col="red")
dev.copy(png,"plot1.png", width=480, height=480)
dev.off()
#Script 2
plot(data$Global_active_power~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png,"plot2.png", width=480, height=480)
#Script 3
plot(data$Sub_metering_1~data$dateTime, type="l",ylab="Global Active Power (kilowatts)", xlab="")
lines(data$Sub_metering_2~data$dateTime,col='Red')
lines(data$Sub_metering_3~data$dateTime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lwd=c(1,1,1), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file="plot3.png", height=480, width=480)
#Script 4
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(data$Global_active_power~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Voltage~data$dateTime, type="l", ylab="Voltage (volt)", xlab="")
plot(data$Sub_metering_1~data$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
lines(data$Sub_metering_2~data$dateTime,col='Red')
lines(data$Sub_metering_3~data$dateTime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n",legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$Global_reactive_power~data$dateTime, type="l", ylab="Global Rective Power (kilowatts)",xlab="")
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
source("master_script.R")
source("master_script.R")
source('~/Desktop/Coursera/4. Exploratory Data Analysis/plot1.R')
source('~/Desktop/Coursera/4. Exploratory Data Analysis/plot1.R')
source('~/Desktop/Coursera/4. Exploratory Data Analysis/plot1.R')
